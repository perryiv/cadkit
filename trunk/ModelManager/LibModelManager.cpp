
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2008, Arizona State University
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//  Author(s): Jeff Conner
//
///////////////////////////////////////////////////////////////////////////////

#include "LibModelManager.h"


#include "osg/Group"

///////////////////////////////////////////////////////////////////////////////
//
//  Constructor
//
///////////////////////////////////////////////////////////////////////////////

LibModelManager::LibModelManager() : 
  BaseClass ()
{
  

}


///////////////////////////////////////////////////////////////////////////////
//
//  Destructor
//
///////////////////////////////////////////////////////////////////////////////

LibModelManager::~LibModelManager()
{
  
}


///////////////////////////////////////////////////////////////////////////////
//
//  Clear the document.
//
///////////////////////////////////////////////////////////////////////////////

void LibModelManager::clear ( Unknown *caller )
{
  
  Guard guard ( this->mutex() );
}


///////////////////////////////////////////////////////////////////////////////
//
//  Clear the document.
//
///////////////////////////////////////////////////////////////////////////////

void LibModelManager::read( const std::string &filename, const std::string &type, Usul::Interfaces::IUnknown *caller, Usul::Interfaces::IUnknown *progress )
{

}

///////////////////////////////////////////////////////////////////////////////
//
//  Build the scene.
//
///////////////////////////////////////////////////////////////////////////////

osg::Node *LibModelManager::buildScene ( Unknown *caller )
{
  
  Guard guard ( this->mutex() );

  osg::ref_ptr< osg::Group > group ( new osg::Group );

  return group.release();
}


///////////////////////////////////////////////////////////////////////////////
//
//  Write the mpd file.
//
///////////////////////////////////////////////////////////////////////////////

void LibModelManager::write() const
{
  
}


///////////////////////////////////////////////////////////////////////////////
//
//  Write the mpd file to filename <filename>.
//
///////////////////////////////////////////////////////////////////////////////

void LibModelManager::write( const std::string &filename ) const
{

}
