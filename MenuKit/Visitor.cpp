
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2002, John K. Grant.
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//
//  Base visitor class.
//
///////////////////////////////////////////////////////////////////////////////

#include "Visitor.h"
#include "Menu.h"

using namespace MenuKit;


///////////////////////////////////////////////////////////////////////////////
//
//  Default constructor.
//
///////////////////////////////////////////////////////////////////////////////

Visitor::Visitor() : BaseClass(), _mode ( Visitor::ALL )
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
///////////////////////////////////////////////////////////////////////////////

Visitor::Visitor ( Mode m ) : BaseClass(), _mode ( m )
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destructor.
//
///////////////////////////////////////////////////////////////////////////////

Visitor::~Visitor()
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Traverse the tree.
//
///////////////////////////////////////////////////////////////////////////////

void Visitor::traverse ( Menu &m )
{
  m.traverse ( *this );
}


///////////////////////////////////////////////////////////////////////////////
//
//  Apply this visitor to the menu.
//
///////////////////////////////////////////////////////////////////////////////

void Visitor::apply ( Menu &m )
{
  this->traverse ( m );
}


///////////////////////////////////////////////////////////////////////////////
//
//  Apply this visitor to the button.
//
///////////////////////////////////////////////////////////////////////////////

void Visitor::apply ( Button & )
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Apply this visitor to the separator.
//
///////////////////////////////////////////////////////////////////////////////

void Visitor::apply ( Separator &s )
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Apply this visitor to the radio button.
//
///////////////////////////////////////////////////////////////////////////////

void Visitor::apply ( RadioButton &radio )
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Apply this visitor to the toggle button.
//
///////////////////////////////////////////////////////////////////////////////

void Visitor::apply ( ToggleButton &toggle )
{
}
