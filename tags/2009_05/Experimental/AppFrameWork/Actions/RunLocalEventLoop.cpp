
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2002, Perry L Miller IV
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//
//  Run a local event loop for the given amount of time.
//
///////////////////////////////////////////////////////////////////////////////

#include "AppFrameWork/Actions/RunLocalEventLoop.h"
#include "AppFrameWork/Core/Program.h"
#include "AppFrameWork/Core/Application.h"

#include "Usul/System/Clock.h"

using namespace AFW::Actions;

USUL_IMPLEMENT_TYPE_ID ( RunLocalEventLoop );


///////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
///////////////////////////////////////////////////////////////////////////////

RunLocalEventLoop::RunLocalEventLoop ( Usul::Types::Uint64 t ) : BaseClass(),
  _duration ( t )
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destructor.
//
///////////////////////////////////////////////////////////////////////////////

RunLocalEventLoop::~RunLocalEventLoop()
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Perform the action.
//
///////////////////////////////////////////////////////////////////////////////

void RunLocalEventLoop::execute ( AFW::Core::Object * )
{
  Guard guard ( this->mutex() );
  AFW_GUARD_PROGRAM;

  const Usul::Types::Uint64 now ( Usul::System::Clock::milliseconds() );
  while ( Usul::System::Clock::milliseconds() < ( now + _duration ) )
    AFW::Core::Program::instance().app()->run ( AFW::Core::Application::RUN_WHILE_EVENTS );
}
