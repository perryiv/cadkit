
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2002, Perry L Miller IV
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//
//  One of the contained conditions has to be true.
//
///////////////////////////////////////////////////////////////////////////////

#include "AppFrameWork/Conditions/Or.h"

#include <algorithm>

using namespace AFW::Conditions;

USUL_IMPLEMENT_TYPE_ID ( Or );


///////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
///////////////////////////////////////////////////////////////////////////////

Or::Or() : BaseClass()
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destructor.
//
///////////////////////////////////////////////////////////////////////////////

Or::~Or()
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  One of the contained conditions has to be true.
//
///////////////////////////////////////////////////////////////////////////////

bool Or::evaluate ( AFW::Core::Object *object )
{
  Guard guard ( this->mutex() );
  for ( Group::Iterator i = this->begin(); i != this->end(); ++i )
  {
    if ( true == (*i)->evaluate ( object ) )
    {
      return true;
    }
  }
  return false;
}
