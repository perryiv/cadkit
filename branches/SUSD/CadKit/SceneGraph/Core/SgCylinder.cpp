
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2002, Perry L. Miller IV
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//
///////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////
//
//  SgCylinder.cpp: Cylinder class.
//
/////////////////////////////////////////////////////////////////////////////

#include "SgPrecompiled.h"
#include "SgCylinder.h"

#ifndef _CADKIT_USE_PRECOMPILED_HEADERS
# include "Standard/SlPrint.h"
#endif

using namespace CadKit;

SG_IMPLEMENT_DYNAMIC_NODE(SgCylinder,SgPrimitive);


/////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
/////////////////////////////////////////////////////////////////////////////

SgCylinder::SgCylinder() : SgPrimitive(),
  baseCenter ( 0.0f, 0.0f, 0.0f ),
  baseRadius ( 1.0f ),
  topRadius ( 1.0f ),
  height ( 1.0f )
{
  SL_PRINT2 ( "SgCylinder::SgCylinder(), this = %X\n", this );
}


/////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
/////////////////////////////////////////////////////////////////////////////

SgCylinder::SgCylinder ( const SlVec3f &bc, const SlFloat32 &br, const SlFloat32 &tr, const SlFloat32 &h ) : SgPrimitive(),
  baseCenter ( bc ),
  baseRadius ( br ),
  topRadius ( tr ),
  height ( h )
{
  SL_PRINT2 ( "SgCylinder::SgCylinder(), this = %X\n", this );
}


/////////////////////////////////////////////////////////////////////////////
//
//  Destructor.
//
/////////////////////////////////////////////////////////////////////////////

SgCylinder::~SgCylinder()
{
  SL_PRINT2 ( "SgCylinder::SgCylinder(), this = %X\n", this );
}
