Notes on the scene graph libraries.



--------------------------------------------------------------------------------



Look for a more general way to do the state-node push/pop in SgVisitor. 

Perhaps have the nodes define whether or not they should be push/popped? 

The stack has to remain on a per-visitor basis, so as to support multiple 

visitors (each in their own thread) accessing the scene at the same time. 

Is there a slick way to do this with functors?



--------------------------------------------------------------------------------



To support multi-threaded access of the nodes, you could have a multi-thread 

safe wrapper class like this:

template <class Type> class SlMultiThreadSafe

Then in SgMaterial, for example, you could have:

SlMaterial<SlMultiThreadSafe<float> > material;



--------------------------------------------------------------------------------



Use double (or is it triple?) dispatch of the nodes during traversal (like OSG 

does with the virtual "traverse" function). Try to move away from the simple 

kind of visitor pattern where the base visitor class has to know about all the 

nodes.



--------------------------------------------------------------------------------



Can you use functors to generalize the scene-graph-loading and file-parsing, 

instead of interfaces? If you can, is it better?



--------------------------------------------------------------------------------



