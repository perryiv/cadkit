
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2002, John K. Grant and Perry L. Miller IV.
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//
//  Wand rotation matrix functor.
//
///////////////////////////////////////////////////////////////////////////////

#include "Usul/Functors/Interaction/Wand/WandRotation.h"
#include "Usul/Trace/Trace.h"

using namespace Usul::Functors::Interaction::Wand;

USUL_IMPLEMENT_TYPE_ID ( WandRotation );


///////////////////////////////////////////////////////////////////////////////
//
//  Default constructors.
//
///////////////////////////////////////////////////////////////////////////////

WandRotation::WandRotation ( Unknown *caller, const std::string &name ) : BaseClass ( caller, name )
{
  USUL_TRACE_SCOPE;
}


///////////////////////////////////////////////////////////////////////////////
//
//  Copy constructors.
//
///////////////////////////////////////////////////////////////////////////////

WandRotation::WandRotation ( const WandRotation &w ) : BaseClass ( w )
{
  USUL_TRACE_SCOPE;
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destructors.
//
///////////////////////////////////////////////////////////////////////////////

WandRotation::~WandRotation()
{
  USUL_TRACE_SCOPE;
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the wand's rotation.
//
///////////////////////////////////////////////////////////////////////////////

void WandRotation::operator()()
{
  USUL_TRACE_SCOPE;

  WandState *state ( this->_wandState() );
  if ( 0x0 != state )
  {
    Guard guard ( this->mutex() );
    state->wandRotation ( _matrix );
  }
}
