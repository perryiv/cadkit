
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2006, Decision Theater
//  All rights reserved.
//  Created by: Adam Kubach
//
///////////////////////////////////////////////////////////////////////////////

#include "LineLayerGlue.h"

#include "Usul/Pointers/Pointers.h"
#include "Threads/OpenThreads/Mutex.h"
#include "Usul/Threads/Mutex.h"

using namespace DT::Minerva::Glue;


///////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
///////////////////////////////////////////////////////////////////////////////

LineLayerGlue::LineLayerGlue() : _lineLayer ( 0x0 )
{
  Usul::Threads::SetMutexFactory factory ( &Threads::OT::newOpenThreadsMutex );
  _lineLayer = new ::Minerva::Core::Layers::LineLayer;
  Usul::Pointers::reference ( _lineLayer );
}


///////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
///////////////////////////////////////////////////////////////////////////////

LineLayerGlue::LineLayerGlue(DT::Minerva::Glue::LineLayerGlue ^layer) : _lineLayer ( 0x0 )
{
  _lineLayer = new ::Minerva::Core::Layers::LineLayer;
  Usul::Pointers::reference ( _lineLayer );

  this->_setProperties( layer );

  this->LineWidth = layer->LineWidth;
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destructor.
//
///////////////////////////////////////////////////////////////////////////////

LineLayerGlue::~LineLayerGlue()
{
  Usul::Pointers::unreference( _lineLayer );
  _lineLayer = 0x0;
}


///////////////////////////////////////////////////////////////////////////////
//
//  Finalizer.
//
///////////////////////////////////////////////////////////////////////////////

LineLayerGlue::!LineLayerGlue()
{
  Usul::Pointers::unreference( _lineLayer );
  _lineLayer = 0x0;
}


///////////////////////////////////////////////////////////////////////////////
//
//  Return the layer.
//
///////////////////////////////////////////////////////////////////////////////

Minerva::Core::Layers::Layer* LineLayerGlue::layer()
{
  return _lineLayer;
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the line width.
//
///////////////////////////////////////////////////////////////////////////////

float LineLayerGlue::LineWidth::get()
{
  return _lineLayer->lineWidth();
}


///////////////////////////////////////////////////////////////////////////////
//
//  Set the line width.
//
///////////////////////////////////////////////////////////////////////////////

void LineLayerGlue::LineWidth::set ( float f )
{
  _lineLayer->lineWidth ( f );
}
