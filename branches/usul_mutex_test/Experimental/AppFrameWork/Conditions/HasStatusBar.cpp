
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2002, Perry L Miller IV
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//
//  Returns true if there is a status bar.
//
///////////////////////////////////////////////////////////////////////////////

#include "AppFrameWork/Conditions/HasStatusBar.h"
#include "AppFrameWork/Windows/MainWindow.h"
#include "AppFrameWork/Core/Program.h"
#include "AppFrameWork/Core/Application.h"

using namespace AFW::Conditions;

USUL_IMPLEMENT_TYPE_ID ( HasStatusBar );


///////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
///////////////////////////////////////////////////////////////////////////////

HasStatusBar::HasStatusBar ( bool want ) : BaseClass ( want )
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destructor.
//
///////////////////////////////////////////////////////////////////////////////

HasStatusBar::~HasStatusBar()
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Returns true if there is a status bar.
//
///////////////////////////////////////////////////////////////////////////////

bool HasStatusBar::evaluate ( AFW::Core::Object * )
{
  Guard guard ( this->mutex() );

  // Lock program.
  AFW_GUARD_PROGRAM;

  // Check application.
  if ( 0x0 == AFW::Core::Program::instance().app() )
    return false;

  // Get main window.
  AFW::Windows::MainWindow::RefPtr mw ( AFW::Core::Program::instance().app()->mainWindow() );
  if ( false == mw.valid() )
    return false;

  // Does it have a status bar?
  const bool has ( 0x0 != mw->statusBar() );

  // Return desired answer.
  return ( has == _want );
}
