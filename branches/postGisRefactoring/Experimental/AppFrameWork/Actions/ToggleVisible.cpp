
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2002, Perry L Miller IV
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//
//  Set the visible state.
//
///////////////////////////////////////////////////////////////////////////////

#include "AppFrameWork/Actions/ToggleVisible.h"
#include "AppFrameWork/Windows/Window.h"

using namespace AFW::Actions;

USUL_IMPLEMENT_TYPE_ID ( ToggleVisible );


///////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
///////////////////////////////////////////////////////////////////////////////

ToggleVisible::ToggleVisible ( AFW::Core::Object *obj ) : BaseClass(),
  _object ( obj )
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destructor.
//
///////////////////////////////////////////////////////////////////////////////

ToggleVisible::~ToggleVisible()
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Perform the action.
//
///////////////////////////////////////////////////////////////////////////////

void ToggleVisible::execute ( AFW::Core::Object *object )
{
  Guard guard ( this->mutex() );

  // First try member object.
  if ( _object.valid() )
  {
    AFW::Windows::Window::RefPtr window ( dynamic_cast < AFW::Windows::Window * > ( _object.get() ) );
    if ( window.valid() )
    {
      window->visible ( !window->visible() );
      return;
    }
  }

  // Set check for given object.
  if ( object )
  {
    AFW::Windows::Window::RefPtr window ( dynamic_cast < AFW::Windows::Window * > ( object ) );
    if ( window.valid() )
      window->visible ( !window->visible() );
  }
}
