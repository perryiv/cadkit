
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2002, Perry L. Miller IV
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//
//  Radio button class for menus.
//
///////////////////////////////////////////////////////////////////////////////

#include "FoxTools/Menu/RadioButton.h"
#include "FoxTools/Functions/Check.h"
#include "FoxTools/Headers/MenuRadio.h"

using namespace FoxTools;
using namespace FoxTools::Menu;


///////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
///////////////////////////////////////////////////////////////////////////////

RadioButton::RadioButton ( unsigned int token ) : BaseClass ( token )
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
///////////////////////////////////////////////////////////////////////////////

RadioButton::RadioButton ( const std::string &name, FX::FXObject *target, unsigned int selector, unsigned int token ) : 
  BaseClass ( name, target, selector, token )
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
///////////////////////////////////////////////////////////////////////////////

RadioButton::RadioButton ( const std::string &name, 
                 const std::string &hotKeys, 
                 const std::string &description, 
                 FX::FXObject *target, 
                 unsigned int selector, 
                 unsigned int token ) : 
  BaseClass ( name, hotKeys, description, target, selector, token )
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destructor.
//
///////////////////////////////////////////////////////////////////////////////

RadioButton::~RadioButton()
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Build the button.
//
///////////////////////////////////////////////////////////////////////////////

void RadioButton::_build ( FX::FXComposite *parent )
{
  if ( 0x0 == this->_button() )
  {
    std::ostringstream text;
    text << this->name() << '\t' << this->hotKeys() << '\t' << this->description();
    this->_button ( new FX::FXMenuRadio ( parent, text.str().c_str(), this->target(), this->selector() ) );
    this->_button()->setUserData ( this );
  }
}


///////////////////////////////////////////////////////////////////////////////
//
//  Set the check.
//
///////////////////////////////////////////////////////////////////////////////

void RadioButton::check ( bool state )
{
  FoxTools::Functions::check ( state, this->_button() );
}
