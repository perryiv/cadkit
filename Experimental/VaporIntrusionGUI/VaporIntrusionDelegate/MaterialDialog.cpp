
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2008, Arizona State University
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//  Author: Jeff Conner
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//
//  Input dialog for files.
//
///////////////////////////////////////////////////////////////////////////////

#include "MaterialDialog.h"

#include "Usul/Convert/Convert.h"

///////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
///////////////////////////////////////////////////////////////////////////////

MaterialDialog::MaterialDialog ( QWidget *parent ) : BaseClass ( parent )
{
  // Initialize code from Designer.
  this->setupUi ( this );

 
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destructor.
//
///////////////////////////////////////////////////////////////////////////////

MaterialDialog::~MaterialDialog()
{

}


///////////////////////////////////////////////////////////////////////////////
//
// Get the name 
//
///////////////////////////////////////////////////////////////////////////////

std::string MaterialDialog::name()
{
  std::string n ( _name->text().toStdString() );

  return n;
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the type
//
///////////////////////////////////////////////////////////////////////////////

std::string MaterialDialog::type()
{
  //QLineEdit *_type;

  std::string t ( _type->text().toStdString() );

  return t;
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the color
//
///////////////////////////////////////////////////////////////////////////////

osg::Vec4 MaterialDialog::color()
{
  //QtTools::ColorButton *color;

  QColor qc ( _color->color() );

  osg::Vec4 c ( static_cast< float > ( qc.redF() ), 
                static_cast< float > ( qc.greenF() ),
                static_cast< float > ( qc.blueF() ),
                static_cast< float > ( qc.alphaF() ) );

  return c;
}


///////////////////////////////////////////////////////////////////////////////
//
//  Set the name
//
///////////////////////////////////////////////////////////////////////////////

void MaterialDialog::name( const std::string& n )
{
  _name->setText( n.c_str() );
}


///////////////////////////////////////////////////////////////////////////////
//
//  Set the type
//
///////////////////////////////////////////////////////////////////////////////

void MaterialDialog::type( const std::string& t )
{
  _type->setText( t.c_str() );
}


