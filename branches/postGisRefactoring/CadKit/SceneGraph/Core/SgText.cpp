
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2002, Perry L. Miller IV
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//
///////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////
//
//  SgText.cpp: Color wheel node.
//
/////////////////////////////////////////////////////////////////////////////

#include "SgPrecompiled.h"
#include "SgText.h"

#ifndef _CADKIT_USE_PRECOMPILED_HEADERS
# include "Standard/SlPrint.h"
# include "Standard/SlAssert.h"
#endif

using namespace CadKit;

SG_IMPLEMENT_DYNAMIC_NODE ( SgText, SgShape );


/////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
/////////////////////////////////////////////////////////////////////////////

SgText::SgText() : SgShape(),
  _text ( "" )
{
  SL_PRINT2 ( "SgText::SgText(), this = %X\n", this );
}


/////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
/////////////////////////////////////////////////////////////////////////////

SgText::SgText ( const std::string &text ) : SgShape(),
  _text ( text )
{
  SL_PRINT2 ( "SgText::SgText(), this = %X\n", this );
}


/////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
/////////////////////////////////////////////////////////////////////////////

SgText::SgText ( const SgText &text ) : SgShape(),
  _text ( text._text )
{
  SL_PRINT2 ( "SgText::SgText(), this = %X\n", this );
}


/////////////////////////////////////////////////////////////////////////////
//
//  Destructor.
//
/////////////////////////////////////////////////////////////////////////////

SgText::~SgText()
{
  SL_PRINT2 ( "SgText::~SgText(), this = %X\n", this );
}
