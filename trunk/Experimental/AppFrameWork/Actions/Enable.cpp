
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2002, Perry L Miller IV
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//
//  Enable the control.
//
///////////////////////////////////////////////////////////////////////////////

#include "AppFrameWork/Actions/Enable.h"

#include "AppFrameWork/Windows/Window.h"

using namespace AFW::Actions;

USUL_IMPLEMENT_TYPE_ID ( Enable );


///////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
///////////////////////////////////////////////////////////////////////////////

Enable::Enable ( bool state ) : BaseClass(),
  _state ( state )
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destructor.
//
///////////////////////////////////////////////////////////////////////////////

Enable::~Enable()
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Perform the action.
//
///////////////////////////////////////////////////////////////////////////////

void Enable::execute ( AFW::Core::Object *object )
{
  Guard guard ( this->mutex() );
  AFW::Windows::Window::RefPtr window ( dynamic_cast < AFW::Windows::Window * > ( object ) );
  if ( window.valid() )
    window->enable ( _state );
}
