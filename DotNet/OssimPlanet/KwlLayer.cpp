
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2007, Arizona State University
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//  Created by: Adam Kubach
//
///////////////////////////////////////////////////////////////////////////////

#include "KwlLayer.h"

#include "Usul/Strings/ManagedToNative.h"
#include "Magrathea/KwlLayer.h"

using namespace CadKit::OSSIMPlanet::Glue;

///////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
///////////////////////////////////////////////////////////////////////////////

KwlLayer::KwlLayer( System::String^ s ) : _kwlLayer( 0x0 )
{
  _kwlLayer = new Magrathea::KwlLayer( Usul::Strings::convert ( s ) );
  Usul::Pointers::reference ( _kwlLayer );
}


///////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
///////////////////////////////////////////////////////////////////////////////

KwlLayer::KwlLayer( Magrathea::KwlLayer *layer ) : _kwlLayer( layer )
{
  Usul::Pointers::reference ( _kwlLayer );
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destructor.
//
///////////////////////////////////////////////////////////////////////////////

KwlLayer::~KwlLayer()
{
  Usul::Pointers::unreference ( _kwlLayer );
  _kwlLayer = 0x0;
}


///////////////////////////////////////////////////////////////////////////////
//
//  Finalizer.
//
///////////////////////////////////////////////////////////////////////////////

KwlLayer::!KwlLayer()
{
  Usul::Pointers::unreference ( _kwlLayer );
  _kwlLayer = 0x0;
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the error code.
//
///////////////////////////////////////////////////////////////////////////////

KwlLayer::TextureLayerStateCode KwlLayer::StateCode::get()
{
  if( 0x0 != _kwlLayer )
    return static_cast < TextureLayerStateCode > ( _kwlLayer->getStateCode() );
  return TextureLayerStateCode::NO_SOURCE_DATA;
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the Guid.
//
///////////////////////////////////////////////////////////////////////////////

System::String^ KwlLayer::Guid::get()
{
  return gcnew System::String ( _kwlLayer->guid().c_str() );
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the name.
//
///////////////////////////////////////////////////////////////////////////////

System::String^ KwlLayer::Name::get()
{
  return gcnew System::String ( _kwlLayer->filename().c_str() );
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the shown flag.
//
///////////////////////////////////////////////////////////////////////////////

bool KwlLayer::Shown::get()
{
  return _kwlLayer->showLayer();
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the int pointer.
//
///////////////////////////////////////////////////////////////////////////////

System::IntPtr KwlLayer::nativeIntPtr()
{
  return System::IntPtr ( _kwlLayer->queryInterface( Usul::Interfaces::IUnknown::IID ) );
}
