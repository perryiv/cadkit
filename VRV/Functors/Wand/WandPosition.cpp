
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2002, John K. Grant and Perry L. Miller IV.
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//
//  Wand position matrix functor.
//
///////////////////////////////////////////////////////////////////////////////

#include "WandPosition.h"

using namespace VRV::Functors;


///////////////////////////////////////////////////////////////////////////////
//
//  Default constructors.
//
///////////////////////////////////////////////////////////////////////////////

WandPosition::WandPosition ( Unknown *unknown ) : BaseClass ( unknown )
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Copy constructors.
//
///////////////////////////////////////////////////////////////////////////////

WandPosition::WandPosition ( const WandPosition &w ) : BaseClass ( w )
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destructors.
//
///////////////////////////////////////////////////////////////////////////////

WandPosition::~WandPosition()
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the wand's position.
//
///////////////////////////////////////////////////////////////////////////////

void WandPosition::operator()()
{
  // Get the wand's position.
  WandState::Vector p;
  this->_wandState()->wandPosition ( p );

  // Make a translation
  _matrix.makeTranslation ( p ); // Note: rotation should be identity.
}
