
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2002, Perry L. Miller IV
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//
//  For working with bits.
//
///////////////////////////////////////////////////////////////////////////////

#ifndef _MENUKIT_BITS_H_
#define _MENUKIT_BITS_H_


namespace MenuKit {


template < class T > struct Bits
{
  //////////////////////////////////////////////////////////////////////////////
  //
  //  See if the "bits" are in "number".
  //
  //////////////////////////////////////////////////////////////////////////////

  static bool has ( T number, T bits )
  {
    return ( ( number & bits ) == bits );
  }


  //////////////////////////////////////////////////////////////////////////////
  //
  //  Add the "bits" to "number".
  //
  //////////////////////////////////////////////////////////////////////////////

  static T add ( T number, T bits )
  {
    return ( number | bits );
  }


  //////////////////////////////////////////////////////////////////////////////
  //
  //  Remove the "bits" from "number".
  //
  //////////////////////////////////////////////////////////////////////////////

  static T remove ( T number, T bits )
  {
    return ( ( number & bits ) ? ( number ^ bits ) : number );
  }


  //////////////////////////////////////////////////////////////////////////////
  //
  //  Toggle the "bits" in "number".
  //
  //////////////////////////////////////////////////////////////////////////////

  static T toggle ( T number, T bits )
  {
    return ( number ^ bits );
  }
};


}; // namespace MenuKit


#endif // _MENUKIT_BITS_H_
