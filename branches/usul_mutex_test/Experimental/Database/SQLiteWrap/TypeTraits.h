
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2002, Arizona State University
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//  Author: Perry L Miller IV
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//
//  Classes for type traits.
//
///////////////////////////////////////////////////////////////////////////////

#ifndef _SQL_LITE_WRAP_TYPE_TRAITS_H_
#define _SQL_LITE_WRAP_TYPE_TRAITS_H_


#include <string>


namespace SQLiteWrap {


///////////////////////////////////////////////////////////////////////////////
//
//  Generic type is a string.
//
///////////////////////////////////////////////////////////////////////////////

template < class T > struct TypeTraits
{
  static const char *name()
  {
    return "string";
  }
};


///////////////////////////////////////////////////////////////////////////////
//
//  Macro to define specific trait types.
//
///////////////////////////////////////////////////////////////////////////////

#define SQL_LITE_WRAP_DEFINE_TRAIT_TYPE(the_type,the_name) \
template <> struct TypeTraits < the_type > \
{ \
  static const char *name() \
  { \
    return the_name; \
  } \
}


///////////////////////////////////////////////////////////////////////////////
//
//  Define some types.
//
///////////////////////////////////////////////////////////////////////////////

SQL_LITE_WRAP_DEFINE_TRAIT_TYPE ( double, "double"  );
SQL_LITE_WRAP_DEFINE_TRAIT_TYPE ( int,    "integer" );


} // namespace SQLiteWrap


#endif // _SQL_LITE_WRAP_TYPE_TRAITS_H_
