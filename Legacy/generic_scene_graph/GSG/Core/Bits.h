
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2002, Perry L. Miller IV
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//
///////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
//  Functions for working with bits.
//
//////////////////////////////////////////////////////////////////////////

#ifndef _GENERIC_SCENE_GRAPH_CORE_BIT_FUNCTIONS_H_
#define _GENERIC_SCENE_GRAPH_CORE_BIT_FUNCTIONS_H_


namespace GSG {


//////////////////////////////////////////////////////////////////////////
//
//  See if the "bits" are in "number".
//
//////////////////////////////////////////////////////////////////////////

template < typename T > inline bool hasBits ( T number, T bits )
{
  return ( ( number & bits ) == bits );
}


//////////////////////////////////////////////////////////////////////////
//
//  Add the "bits" to "number".
//
//////////////////////////////////////////////////////////////////////////

template < typename T > inline T addBits ( T number, T bits )
{
  return ( number | bits );
}


//////////////////////////////////////////////////////////////////////////
//
//  Remove the "bits" from "number".
//
//////////////////////////////////////////////////////////////////////////

template < typename T > inline T removeBits ( T number, T bits )
{
  return ( ( number & bits ) ? ( number ^ bits ) : number );
}


//////////////////////////////////////////////////////////////////////////
//
//  Toggle the "bits" in "number".
//
//////////////////////////////////////////////////////////////////////////

template < typename T > inline T toggleBits ( T number, T bits )
{
  return ( number ^ bits );
}


//////////////////////////////////////////////////////////////////////////
//
//  Set the "bits" in "number".
//
//////////////////////////////////////////////////////////////////////////

template < typename T > inline T setBits ( T number, T bits, bool state )
{
  return ( state ) ? GSG::addBits ( number, bits ) : GSG::removeBits ( number, bits );
}


}; // namespace GSG


#endif // _GENERIC_SCENE_GRAPH_CORE_BIT_FUNCTIONS_H_
