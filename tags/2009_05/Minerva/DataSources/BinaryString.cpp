
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2009, Adam Kubach
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//
///////////////////////////////////////////////////////////////////////////////

#include "Minerva/DataSources/BinaryString.h"

using namespace Minerva::DataSources;


///////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
///////////////////////////////////////////////////////////////////////////////

BinaryString::BinaryString() : BaseClass(),
  _bytes()
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
///////////////////////////////////////////////////////////////////////////////

BinaryString::BinaryString ( unsigned char* bytes, unsigned int length ) : BaseClass(),
  _bytes ( bytes, bytes + length )
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destructor.
//
///////////////////////////////////////////////////////////////////////////////

BinaryString::~BinaryString()
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Beginning iterator.
//
///////////////////////////////////////////////////////////////////////////////

BinaryString::const_iterator BinaryString::begin() const
{
  return _bytes.begin();
}


///////////////////////////////////////////////////////////////////////////////
//
//  Ending iterator.
//
///////////////////////////////////////////////////////////////////////////////

BinaryString::const_iterator BinaryString::end() const
{
  return _bytes.end();
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the underlying byte buffer;
//
///////////////////////////////////////////////////////////////////////////////

const BinaryString::Bytes& BinaryString::byteBuffer() const
{
  return _bytes;
}
