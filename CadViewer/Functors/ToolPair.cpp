
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2002, John K. Grant and Perry L. Miller IV.
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//
//  Tool pair.
//
///////////////////////////////////////////////////////////////////////////////

#include "Precompiled.h"
#include "ToolPair.h"

using namespace CV;
using namespace CV::Functors;


///////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
///////////////////////////////////////////////////////////////////////////////

ToolPair::ToolPair ( 
  Unknown *unknown, 
  Tool *tool1, 
  Tool *tool2,
  unsigned int id ) : 
  BaseClass ( unknown, id ),
  _tool1 ( tool1 ),
  _tool2 ( tool2 )
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Copy constructor.
//
///////////////////////////////////////////////////////////////////////////////

ToolPair::ToolPair ( const ToolPair &cb ) : BaseClass ( cb ),
  _tool1 ( cb._tool1 ),
  _tool2 ( cb._tool2 )
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destructor.
//
///////////////////////////////////////////////////////////////////////////////

ToolPair::~ToolPair()
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Have the Tools do their thing.
//
///////////////////////////////////////////////////////////////////////////////

void ToolPair::operator()()
{
  if ( _tool1.valid() )
    (*_tool1)();
  if ( _tool2.valid() )
    (*_tool2)();
}


///////////////////////////////////////////////////////////////////////////////
//
//  Set the internal transforms.
//
///////////////////////////////////////////////////////////////////////////////

void ToolPair::transforms ( const Tool::Transforms &mt )
{
  _tool1->transforms ( mt );
  _tool2->transforms ( mt );
}
