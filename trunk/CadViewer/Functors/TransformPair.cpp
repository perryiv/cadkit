
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2002, John K. Grant and Perry L. Miller IV.
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//
//  Transform pair.
//
///////////////////////////////////////////////////////////////////////////////

#include "Precompiled.h"
#include "TransformPair.h"

using namespace CV;
using namespace CV::Functors;


///////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
///////////////////////////////////////////////////////////////////////////////

TransformPair::TransformPair ( 
  Unknown *unknown, 
  Transform *c1, 
  Transform *c2,
  unsigned int id ) : 
  BaseClass ( unknown, id ),
  _c1 ( c1 ),
  _c2 ( c2 )
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Copy constructor.
//
///////////////////////////////////////////////////////////////////////////////

TransformPair::TransformPair ( const TransformPair &cb ) : BaseClass ( cb ),
  _c1 ( cb._c1 ),
  _c2 ( cb._c2 )
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destructor.
//
///////////////////////////////////////////////////////////////////////////////

TransformPair::~TransformPair()
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Have the transforms do their thing.
//
///////////////////////////////////////////////////////////////////////////////

void TransformPair::operator()()
{
  if ( _c1.valid() )
    (*_c1)();
  if ( _c2.valid() )
    (*_c2)();
}
