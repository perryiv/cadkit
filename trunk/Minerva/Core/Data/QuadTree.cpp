
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2006, Arizona State University
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//  Author: Adam Kubach
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//
//  Class for a quad tree.
//
///////////////////////////////////////////////////////////////////////////////

#include "Minerva/Core/Data/QuadTree.h"
#include "Minerva/Core/Data/QuadTreeNode.h"

#include "Usul/Pointers/Pointers.h"

using namespace Minerva::Core::Data;


///////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
///////////////////////////////////////////////////////////////////////////////

QuadTree::QuadTree ( const Extents& e ) : BaseClass(),
  _root ( new QuadTreeNode ( e ) )
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destructor.
//
///////////////////////////////////////////////////////////////////////////////

QuadTree::~QuadTree()
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Clear.
//
///////////////////////////////////////////////////////////////////////////////

void QuadTree::clear()
{
  _root->clear();
}


///////////////////////////////////////////////////////////////////////////////
//
//  Insert a key.
//
///////////////////////////////////////////////////////////////////////////////

void QuadTree::insert ( KeyPtr key )
{
  _root->insert ( key );
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get all the keys that are contained by the extents.
//
///////////////////////////////////////////////////////////////////////////////

QuadTree::Keys QuadTree::query ( const Extents& e ) const
{
  return _root->query ( e );
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get all the keys that are contained by the extents.
//
///////////////////////////////////////////////////////////////////////////////

void QuadTree::query ( const Extents& e, Keys& keys ) const
{
  _root->query ( e, keys );
}
