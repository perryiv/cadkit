
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2002, John K. Grant and Perry L. Miller IV.
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//
//  Base menu class.
//
///////////////////////////////////////////////////////////////////////////////

#include "BaseMenu.h"
#include "Font.h"

#include "MenuKit/Errors.h"

#include "osgText/Font"

using namespace MenuKit;
using namespace MenuKit::OSG;


///////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
///////////////////////////////////////////////////////////////////////////////

BaseMenu::BaseMenu()  : BaseClass(),            // typedef MenuKit::Referenced  BaseClass
                        _menu           ( new MenuKit::Menu ( "", "", MenuKit::Menu::HORIZONTAL ) ),
                        _skin           ( new BaseMenu::Skin ( 0x0 ) ),
                        _behavior       ( new BaseMenu::Behavior() ),
                        _scene          ( new osg::MatrixTransform )
{
  MENUKIT_CHECK_POINTER ( 2705909597u, _menu.get() );
  MENUKIT_CHECK_POINTER ( 3253280940u, _skin.get() );
  MENUKIT_CHECK_POINTER ( 1292063082u, _behavior.get() );
  MENUKIT_CHECK_POINTER ( 1945832253u, _scene.get() );

  // Give the menu-behavior its root menu.
  _behavior->root ( _menu.get() );

  // Give the skin a font.
  osg::ref_ptr<osgText::Font> font ( osgText::readFontFile ( MenuKit::OSG::Font::filename ( "arial" ) ) );
  MENUKIT_CHECK_POINTER ( 1612593881u, font.get() );
  _skin->font ( font.get() );

  // Set the normal colors.
  _skin->bg_color_normal    ( osg::Vec4 ( 0.6f, 0.6f, 0.6f, 1.0f ) );
  _skin->text_color_normal  ( osg::Vec4 ( 0.0f, 0.0f, 0.0f, 1.0f ) );

  // Set the highlight colors.
  _skin->bg_color_highlight  ( osg::Vec4 ( 0.4f, 0.4f, 0.4f, 1.0f ) );
  _skin->text_color_highlight( osg::Vec4 ( 0.0f, 0.0f, 0.0f, 1.0f ) );

  // Set the disabled colors
  _skin->bg_color_disabled   ( osg::Vec4 ( 0.6f, 0.6f, 0.6f, 1.0f ) );
  _skin->text_color_disabled ( osg::Vec4 ( 0.3f, 0.3f, 0.3f, 1.0f ) );
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destructor.
//
///////////////////////////////////////////////////////////////////////////////

BaseMenu::~BaseMenu()
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the menu.
//
///////////////////////////////////////////////////////////////////////////////

const MenuKit::Menu *BaseMenu::menu() const
{
  MENUKIT_CHECK_POINTER ( 2294275485u, _menu.get() );
  return _menu.get();
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the menu.
//
///////////////////////////////////////////////////////////////////////////////

MenuKit::Menu *BaseMenu::menu()
{
  MENUKIT_CHECK_POINTER ( 1587148008u, _menu.get() );
  return _menu.get();
}


///////////////////////////////////////////////////////////////////////////////
//
//  Set the menu.
//
///////////////////////////////////////////////////////////////////////////////

void BaseMenu::menu ( MenuKit::Menu *menu )
{
  MENUKIT_CHECK_POINTER ( 2619032555u, menu );

  // Set the new menu.
  _menu = menu;

  // Give the menu-behavior its root menu.
  _behavior->root ( _menu.get() );
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the skin.
//
///////////////////////////////////////////////////////////////////////////////

const BaseMenu::Skin *BaseMenu::skin() const
{
  MENUKIT_CHECK_POINTER ( 1111007394u, _skin.get() );
  return _skin.get();
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the skin.
//
///////////////////////////////////////////////////////////////////////////////

BaseMenu::Skin *BaseMenu::skin()
{
  MENUKIT_CHECK_POINTER ( 1769938720u, _skin.get() );
  return _skin.get();
}


///////////////////////////////////////////////////////////////////////////////
//
//  Set the skin.
//
///////////////////////////////////////////////////////////////////////////////

void BaseMenu::skin ( BaseMenu::Skin *skin )
{
  MENUKIT_CHECK_POINTER ( 2905685429u, skin );
  _skin = skin;
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the behavior.
//
///////////////////////////////////////////////////////////////////////////////

const BaseMenu::Behavior *BaseMenu::behavior() const
{
  MENUKIT_CHECK_POINTER ( 3517494688u, _behavior.get() );
  return _behavior.get();
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the behavior.
//
///////////////////////////////////////////////////////////////////////////////

BaseMenu::Behavior *BaseMenu::behavior()
{
  MENUKIT_CHECK_POINTER ( 1490228173u, _behavior.get() );
  return _behavior.get();
}


///////////////////////////////////////////////////////////////////////////////
//
//  Set the behavior.
//
///////////////////////////////////////////////////////////////////////////////

void BaseMenu::behavior ( BaseMenu::Behavior *behavior )
{
  MENUKIT_CHECK_POINTER ( 3362882604u, behavior );
  _behavior = behavior;
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the scene.
//
///////////////////////////////////////////////////////////////////////////////

const BaseMenu::MT *BaseMenu::scene() const
{
  MENUKIT_CHECK_POINTER ( 3859043050u, _scene.get() );
  return _scene.get();
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the scene.
//
///////////////////////////////////////////////////////////////////////////////

BaseMenu::MT *BaseMenu::scene()
{
  MENUKIT_CHECK_POINTER ( 2709170577u, _scene.get() );
  return _scene.get();
}


///////////////////////////////////////////////////////////////////////////////
//
//  Set the scene.
//
///////////////////////////////////////////////////////////////////////////////

void BaseMenu::scene ( BaseMenu::MT *scene )
{
  MENUKIT_CHECK_POINTER ( 1575573547u, scene );
  _scene = scene;
}
