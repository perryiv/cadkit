
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2002, John K. Grant and Perry L. Miller IV.
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//
//  Pair of matrix functors.
//
///////////////////////////////////////////////////////////////////////////////

#include "Precompiled.h"
#include "MatrixPair.h"

using namespace CV;
using namespace CV::Functors;


///////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
///////////////////////////////////////////////////////////////////////////////

MatrixPair::MatrixPair ( 
  Unknown *unknown, 
  MatrixFunctor *c1, 
  MatrixFunctor *c2 ) : 
  BaseClass ( unknown ),
  _c1 ( c1 ),
  _c2 ( c2 )
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Copy constructor.
//
///////////////////////////////////////////////////////////////////////////////

MatrixPair::MatrixPair ( const MatrixPair &cb ) : BaseClass ( cb ),
  _c1 ( cb._c1 ),
  _c2 ( cb._c2 )
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destructor.
//
///////////////////////////////////////////////////////////////////////////////

MatrixPair::~MatrixPair()
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the matrix.
//
///////////////////////////////////////////////////////////////////////////////

void MatrixPair::operator()()
{
  (*_c1)();
  (*_c2)();
  _matrix = _c1->matrix() * _c2->matrix();
}
