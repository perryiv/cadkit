
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2002, Perry L. Miller IV
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//
//  Set the display-list usage.
//
///////////////////////////////////////////////////////////////////////////////

#include "OsgTools/DisplayLists.h"
#include "OsgTools/Visitor.h"

#include "Usul/Adaptors/MemberFunction.h"

#include "osg/Geode"
#include "osg/Drawable"

using namespace OsgTools;


///////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
///////////////////////////////////////////////////////////////////////////////

DisplayLists::DisplayLists ( bool use ) : _use ( use )
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destructor.
//
///////////////////////////////////////////////////////////////////////////////

DisplayLists::~DisplayLists()
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Set the display lists.
//
///////////////////////////////////////////////////////////////////////////////

void DisplayLists::operator () ( osg::Node *node )
{
  if ( node )
  {
    // Declare the visitor.
    osg::ref_ptr<osg::NodeVisitor> visitor ( 
      OsgTools::MakeVisitor<osg::Geode>::make ( 
      Usul::Adaptors::memberFunction ( this, &DisplayLists::_set ) ) );

    // Visit the scene.
    node->accept ( *visitor );
  }
}


///////////////////////////////////////////////////////////////////////////////
//
//  Set all the geode's drawables to the proper display-list state.
//
///////////////////////////////////////////////////////////////////////////////

void DisplayLists::_set ( osg::Geode *geode )
{
  if ( geode )
  {
    for ( unsigned int i = 0; i < geode->getNumDrawables(); ++i )
    {
      osg::ref_ptr<osg::Drawable> drawable ( geode->getDrawable ( i ) );
      if ( drawable.valid() )
      {
        drawable->setUseDisplayList ( _use );
        drawable->dirtyDisplayList();
      }
    }
  }
}
