
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2005, Adam Kubach
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//
///////////////////////////////////////////////////////////////////////////////

#include "LightCallback.h"

#include "OsgTools/Draggers/Dragger.h"

#include "osg/Light"

using namespace OsgTools::Render;

///////////////////////////////////////////////////////////////////////////////
//
//  Constructor
//
///////////////////////////////////////////////////////////////////////////////

LightCallback::LightCallback ( osg::Light *light ) :
BaseClass(),
_direction ( light->getPosition() ),
_light ( light )
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Copy Constructor
//
///////////////////////////////////////////////////////////////////////////////

LightCallback::LightCallback ( const LightCallback &c ) :
BaseClass( c ),
_direction ( c._direction ),
_light( c._light )
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destructor
//
///////////////////////////////////////////////////////////////////////////////

LightCallback::~LightCallback()
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Execute the callback.
//
///////////////////////////////////////////////////////////////////////////////

void LightCallback::operator() ( Dragger &d )
{
  osg::Matrix m ( d.getMatrix() );

  osg::Quat rotation;
  m.get( rotation );

  osg::Vec3 pos ( _direction[0], _direction[1], _direction[2] );
  pos = rotation * pos;
  pos.normalize();

  _light->setPosition ( osg::Vec4 ( pos, 0.0 ) );
}
  

