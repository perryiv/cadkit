
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2002, Perry L. Miller IV
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//
///////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////
//
//  SgTranslation.cpp: A Translation class.
//
/////////////////////////////////////////////////////////////////////////////

#include "SgPrecompiled.h"
#include "SgTranslation.h"

#include "Standard/SlPrint.h"

using namespace CadKit;

SG_IMPLEMENT_DYNAMIC_NODE ( SgTranslation, SgTransformation );


/////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
/////////////////////////////////////////////////////////////////////////////

SgTranslation::SgTranslation() : SgTransformation(), 
  _translation ( 0.0f, 0.0f, 0.0f )
{
  SL_PRINT2 ( "SgTranslation::SgTranslation(), this = %X\n", this );
}


/////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
/////////////////////////////////////////////////////////////////////////////

SgTranslation::SgTranslation ( const SgTranslation &t ) : SgTransformation ( t ),
  _translation ( t._translation )
{
  SL_PRINT2 ( "SgTranslation::SgTranslation(), this = %X\n", this );
}


/////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
/////////////////////////////////////////////////////////////////////////////

SgTranslation::SgTranslation ( const SlVec3f &t ) : SgTransformation(),
  _translation ( t )
{
  SL_PRINT2 ( "SgTranslation::SgTranslation(), this = %X\n", this );
}


/////////////////////////////////////////////////////////////////////////////
//
//  Destructor.
//
/////////////////////////////////////////////////////////////////////////////

SgTranslation::~SgTranslation()
{
  SL_PRINT2 ( "SgTranslation::~SgTranslation(), this = %X\n", this );
}
