
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2005, Perry L Miller IV
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//
//  The component class.
//
///////////////////////////////////////////////////////////////////////////////

#include "FoxDeviceComponent.h"
#include "FoxMouse.h"

#include "Usul/Interfaces/IFoxWindow.h"

USUL_IMPLEMENT_IUNKNOWN_MEMBERS ( FoxDeviceComponent , FoxDeviceComponent::BaseClass );
USUL_IMPLEMENT_TYPE_ID ( FoxDeviceComponent );


///////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
///////////////////////////////////////////////////////////////////////////////

FoxDeviceComponent::FoxDeviceComponent() : BaseClass()
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destructor.
//
///////////////////////////////////////////////////////////////////////////////

FoxDeviceComponent::~FoxDeviceComponent()
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Query for the interface.
//
///////////////////////////////////////////////////////////////////////////////

Usul::Interfaces::IUnknown *FoxDeviceComponent::queryInterface ( unsigned long iid )
{
  switch ( iid )
  {
  case Usul::Interfaces::IUnknown::IID:
  case Usul::Devices::IDeviceCreate::IID:
    return static_cast < Usul::Devices::IDeviceCreate*>(this);
  case Usul::Interfaces::IPlugin::IID:
    return static_cast < Usul::Interfaces::IPlugin*>(this);
  default:
    return 0x0;
  }
}


/////////////////////////////////////////////////////////////////////////////
//
//  Create a Fox Mouse
//
/////////////////////////////////////////////////////////////////////////////

Usul::Devices::IDevice*  FoxDeviceComponent::createDevice ( Usul::Interfaces::IUnknown *caller )
{

  Usul::Interfaces::IFoxWindow::QueryPtr foxWindow ( caller );

  if( foxWindow.valid() )
  {
    FoxMouse::ValidRefPtr mouse ( new FoxMouse ( foxWindow->getFoxWindow(), caller ) );
    return mouse.release();
  }

  return 0x0;
}
