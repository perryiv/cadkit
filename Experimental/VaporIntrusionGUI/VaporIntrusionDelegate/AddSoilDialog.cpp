
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2009, Arizona State University
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//  Author: Jeff Conner
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//
//  Input dialog for files.
//
///////////////////////////////////////////////////////////////////////////////

#include "AddSoilDialog.h"

#include "Usul/Strings/Format.h"

///////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
///////////////////////////////////////////////////////////////////////////////

AddSoilDialog::AddSoilDialog ( QWidget *parent ) : 
BaseClass ( parent ),
_soil()
{
  //// Initialize code from Designer.
  this->setupUi ( this );  

  //initialize the table view
  this->_initialize();
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destructor.
//
///////////////////////////////////////////////////////////////////////////////

AddSoilDialog::~AddSoilDialog()
{
  
}


///////////////////////////////////////////////////////////////////////////////
//
//  Initialize ( Public ).
//
///////////////////////////////////////////////////////////////////////////////

void AddSoilDialog::initialize()
{
  this->_initialize();
}


///////////////////////////////////////////////////////////////////////////////
//
//  Initialize ( Private ).
//
///////////////////////////////////////////////////////////////////////////////

void AddSoilDialog::_initialize()
{
 
}


///////////////////////////////////////////////////////////////////////////////
//
//  Create the soil
//
///////////////////////////////////////////////////////////////////////////////

AddSoilDialog::Soil AddSoilDialog::createSoil()
{
  // get the attributes
  std::string n    ( _name->text().toStdString() );
  std::string t    ( _type->text().toStdString() );
  std::string p    ( _tpor->text().toStdString() );
  std::string wp   ( _wpor->text().toStdString() );
  std::string perm ( _sgperm->text().toStdString() );
  std::string carb ( _dynvisc->text().toStdString() );

  // Create the soil from user input
  Soil s;

  // set the attributes
  s.attributes( n, t, p, wp, perm, "1.0", carb );

  // set the soil
  this->soil ( s );

  // return the soil
  return s;
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the soils
//
///////////////////////////////////////////////////////////////////////////////

AddSoilDialog::Soil AddSoilDialog::soil()
{
  return _soil;
}


///////////////////////////////////////////////////////////////////////////////
//
//  Set the soils
//
///////////////////////////////////////////////////////////////////////////////

void AddSoilDialog::soil( Soil s )
{
  _soil = s;
}
