
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2007, Arizona State University
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//  Created by: Adam Kubach
//
///////////////////////////////////////////////////////////////////////////////

#include "OptionWidget.h"

#include "QtTools/ComboBox.h"

#include "QtGui/QComboBox"
#include "QtGui/QLineEdit"
#include "QtGui/QHBoxLayout"


///////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
///////////////////////////////////////////////////////////////////////////////

OptionWidget::OptionWidget ( const Names& names, QWidget *parent ) : BaseClass ( parent ),
_options ( new QComboBox ),
_key ( new QLineEdit ),
_value ( new QLineEdit )
{
  // Populate the combo box.
  QtTools::ComboBox::populate ( *_options, names );
  
  // Make the layout
  QHBoxLayout *layout ( new QHBoxLayout );
  layout->addWidget ( _options );
  layout->addWidget ( _key );
  layout->addWidget ( _value );
  
  this->setLayout( layout );
  
  this->connect ( _options, SIGNAL ( currentIndexChanged ( int ) ), this, SLOT ( _optionsColumnChanged  ( int ) ) );
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destructor.
//
///////////////////////////////////////////////////////////////////////////////

OptionWidget::~OptionWidget()
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the key.
//
///////////////////////////////////////////////////////////////////////////////

std::string OptionWidget::key() const
{
  return _key->text().toStdString();
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the value.
//
///////////////////////////////////////////////////////////////////////////////

std::string OptionWidget::value() const
{
  return _value->text().toStdString();
}

///////////////////////////////////////////////////////////////////////////////
//
//  Index changed.
//
///////////////////////////////////////////////////////////////////////////////

void OptionWidget::_optionsColumnChanged( int index )
{
  _key->setText( _options->currentText() );
}
