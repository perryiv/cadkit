
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2009, Adam Kubach
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//
//  Specialized layer for roads.
//
///////////////////////////////////////////////////////////////////////////////

#include "Minerva/Layers/OSM/RoadLayer.h"
#include "Minerva/Layers/OSM/LineJob.h"

#include "Usul/Factory/RegisterCreator.h"
#include "Usul/Strings/Format.h"
#include "Usul/User/Directory.h"

using namespace Minerva::Layers::OSM;

USUL_FACTORY_REGISTER_CREATOR ( RoadLayer );


///////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
///////////////////////////////////////////////////////////////////////////////

RoadLayer::RoadLayer() : BaseClass(),
  _cache ( 0x0 )
{
  this->_initializeCache ( "road_layer" );

  // See http://wiki.openstreetmap.org/wiki/Map_Features for key, value pairs.
  this->addRequest ( 5, Predicate ( "highway", "motorway" ) );
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destructor.
//
///////////////////////////////////////////////////////////////////////////////

RoadLayer::~RoadLayer()
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Launch a job for the predicate.
//
///////////////////////////////////////////////////////////////////////////////

RoadLayer::JobPtr RoadLayer::_launchJob ( 
    const Predicate& predicate, 
    const Extents& extents, 
    unsigned int level, 
    Usul::Jobs::Manager *manager, 
    Usul::Jobs::Manager *downloadManager, 
    Usul::Interfaces::IUnknown::RefPtr caller )
{
  return new LineJob ( manager, downloadManager, this->_getCache(), this->url(), extents, level, predicate );
}
