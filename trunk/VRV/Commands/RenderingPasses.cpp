
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2007, Arizona State University
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//  Author(s): Adam Kubach
//
///////////////////////////////////////////////////////////////////////////////

#include "VRV/Commands/RenderingPasses.h"
#include "Usul/Interfaces/IRenderingPasses.h"

using namespace VRV::Commands;

USUL_IMPLEMENT_COMMAND ( RenderingPasses );

///////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
///////////////////////////////////////////////////////////////////////////////

RenderingPasses::RenderingPasses ( const std::string& name, unsigned int passes, Usul::Interfaces::IUnknown *caller ) : 
BaseClass ( caller ),
_passes ( passes )
{
  this->text ( name );
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destructor.
//
///////////////////////////////////////////////////////////////////////////////

RenderingPasses::~RenderingPasses ()
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Execute.
//
///////////////////////////////////////////////////////////////////////////////

void RenderingPasses::_execute ()
{
  Usul::Interfaces::IRenderingPasses::QueryPtr rp ( this->caller () );

  if ( rp.valid () )
    rp->renderingPasses ( _passes );
}


///////////////////////////////////////////////////////////////////////////////
//
//  Update the check.
//
///////////////////////////////////////////////////////////////////////////////

bool RenderingPasses::updateCheck () const
{
  Usul::Interfaces::IRenderingPasses::QueryPtr rp ( const_cast < Usul::Interfaces::IUnknown * > ( this->caller () ) );
  return rp.valid () ? _passes == rp->renderingPasses () : false;
}
