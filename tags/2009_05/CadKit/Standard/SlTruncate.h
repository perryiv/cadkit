
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2002, Perry L. Miller IV
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//
//  SlTruncate: Inline function for truncating a value.
//
///////////////////////////////////////////////////////////////////////////////

#ifndef _CADKIT_STANDARD_LIBRARY_INLINE_TRUNCATE_FUNCTION_H_
#define _CADKIT_STANDARD_LIBRARY_INLINE_TRUNCATE_FUNCTION_H_

#include "SlAssert.h"


namespace CadKit
{
///////////////////////////////////////////////////////////////////////////////
//
//  Truncate the value if it's in the range.
//
///////////////////////////////////////////////////////////////////////////////

template<class T> inline void truncate ( const T &low, const T &good, const T &high, T &value )
{
  SL_ASSERT ( low <= good && good <= high );

  if ( value <= high && value >= low && value != good )
    value = good;
}


}; // namespace CadKit.


///////////////////////////////////////////////////////////////////////////////
//
// For convenience and backward compatability.
//
///////////////////////////////////////////////////////////////////////////////

#define SL_TRUNCATE CadKit::truncate


#endif // _CADKIT_STANDARD_LIBRARY_INLINE_TRUNCATE_FUNCTION_H_
