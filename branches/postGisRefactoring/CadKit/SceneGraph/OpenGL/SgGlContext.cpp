
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2002, Perry L. Miller IV
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//
//  SgGlContext: The rendering context class.
//
///////////////////////////////////////////////////////////////////////////////

#include "SgGlPrecompiled.h"
#include "SgGlContext.h"

#ifndef _CADKIT_USE_PRECOMPILED_HEADERS
# include "Standard/SlAssert.h"
# include "Standard/SlPrint.h"
#endif

using namespace CadKit;

SL_IMPLEMENT_CLASS(SgGlContext,SlRefBase);


///////////////////////////////////////////////////////////////////////////////
//
// If this was a reference pointer then it would be unreferenced (and deleted) 
// too late in the game.
//
///////////////////////////////////////////////////////////////////////////////

SgGlContext *SgGlContext::_current = NULL;


///////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
///////////////////////////////////////////////////////////////////////////////

SgGlContext::SgGlContext() : SlRefBase ( 0 )
{
  SL_PRINT2 ( "SgGlContext::SgGlContext(), this = %X\n", this );
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destructor.
//
///////////////////////////////////////////////////////////////////////////////

SgGlContext::~SgGlContext()
{
  SL_PRINT2 ( "SgGlContext::~SgGlContext(), this = %X\n", this );
}


///////////////////////////////////////////////////////////////////////////////
//
//  Make this context current.
//
///////////////////////////////////////////////////////////////////////////////

bool SgGlContext::makeCurrent()
{
  SL_ASSERT ( this );
  _current = this;
  return true;
}
