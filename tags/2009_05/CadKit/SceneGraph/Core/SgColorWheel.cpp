
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2002, Perry L. Miller IV
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//
///////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////
//
//  SgColorWheel.cpp: Color wheel node.
//
/////////////////////////////////////////////////////////////////////////////

#include "SgPrecompiled.h"
#include "SgColorWheel.h"

#ifndef _CADKIT_USE_PRECOMPILED_HEADERS
# include "Standard/SlPrint.h"
# include "Standard/SlAssert.h"
#endif

using namespace CadKit;

SG_IMPLEMENT_DYNAMIC_NODE(SgColorWheel,SgShape);


/////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
/////////////////////////////////////////////////////////////////////////////

SgColorWheel::SgColorWheel() : SgShape(),
  radius ( 1.0f ),
  intersectRadius ( 1.0f ),
  numSlices ( 100 )
{
  SL_PRINT2 ( "SgColorWheel::SgColorWheel(), this = %X\n", this );
}


/////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
/////////////////////////////////////////////////////////////////////////////

SgColorWheel::SgColorWheel ( const SlFloat32 &r, const SlFloat32 &i, const SlInt32 &n ) : SgShape(),
  radius ( r ),
  intersectRadius ( i ),
  numSlices ( n )
{
  SL_PRINT2 ( "SgColorWheel::SgColorWheel(), this = %X\n", this );
  SL_ASSERT ( r > 0.0f );
  SL_ASSERT ( i > 0.0f );
  SL_ASSERT ( n > 2 );
}


/////////////////////////////////////////////////////////////////////////////
//
//  Destructor.
//
/////////////////////////////////////////////////////////////////////////////

SgColorWheel::~SgColorWheel()
{
  SL_PRINT2 ( "SgColorWheel::~SgColorWheel(), this = %X\n", this );
}
