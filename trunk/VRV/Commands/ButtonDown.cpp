
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2002, Perry L. Miller IV
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//
//  Base class for all button-commands.
//
///////////////////////////////////////////////////////////////////////////////

#include "Precompiled.h"
#include "ButtonDown.h"

using namespace VRV;
using namespace VRV::Commands;

USUL_IMPLEMENT_IUNKNOWN_MEMBERS ( ButtonDown, ButtonDown::BaseClass );


///////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
///////////////////////////////////////////////////////////////////////////////

ButtonDown::ButtonDown ( unsigned long buttonId ) : BaseClass ( buttonId )
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destructor.
//
///////////////////////////////////////////////////////////////////////////////

ButtonDown::~ButtonDown()
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Query for the interface.
//
///////////////////////////////////////////////////////////////////////////////

Usul::Interfaces::IUnknown *ButtonDown::queryInterface ( unsigned long iid )
{
  switch ( iid )
  {
  case VRV::Interfaces::IButtonDown::IID:
    return static_cast<VRV::Interfaces::IButtonDown*>(this);
  default:
    return BaseClass::queryInterface ( iid );
  }
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the id representing the button combination.
//
///////////////////////////////////////////////////////////////////////////////

unsigned long ButtonDown::getButtonId() const
{
  return this->_getButtonId();
}
