
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2007, Arizona State University
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//  Author(s): Adam Kubach
//
///////////////////////////////////////////////////////////////////////////////

#include "MenuKit/RadioButton.h"
#include "MenuKit/Visitor.h"

using namespace MenuKit;


///////////////////////////////////////////////////////////////////////////////
//
//  Default constructor.
//
///////////////////////////////////////////////////////////////////////////////

RadioButton::RadioButton(): BaseClass()
{
  this->radio ( true );
}


///////////////////////////////////////////////////////////////////////////////
//
//  Default constructor.
//
///////////////////////////////////////////////////////////////////////////////

RadioButton::RadioButton( Usul::Commands::Command* command ): BaseClass()
{
  this->radio ( true );
  this->command ( command );
}


///////////////////////////////////////////////////////////////////////////////
//
//  Copy constructor.
//
///////////////////////////////////////////////////////////////////////////////

RadioButton::RadioButton ( const RadioButton& b ): BaseClass ( b )
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Assignment.
//
///////////////////////////////////////////////////////////////////////////////

RadioButton& RadioButton::operator = ( const RadioButton& b )
{
  BaseClass::operator = ( b );
  return ( *this );
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destructor.
//
///////////////////////////////////////////////////////////////////////////////

RadioButton::~RadioButton()
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Accept the visitor.
//
///////////////////////////////////////////////////////////////////////////////

void RadioButton::accept ( Visitor &v )
{
  v.apply ( *this );
}


///////////////////////////////////////////////////////////////////////////////
//
//  Create a RadioButton.
//
///////////////////////////////////////////////////////////////////////////////

RadioButton* RadioButton::create ( const std::string &name, ExecuteFunction f, CheckFunction c )
{
  Usul::Commands::Command::RefPtr command ( new CheckCommand ( name, f, c ) );
  RadioButton::RefPtr button ( new RadioButton ( command.get() ) );
  return button.release();
}


///////////////////////////////////////////////////////////////////////////////
//
//  Create a RadioButton.
//
///////////////////////////////////////////////////////////////////////////////

RadioButton* RadioButton::create ( const std::string &name, ExecuteFunction f, CheckFunction c, EnableFunction e )
{
  Usul::Commands::Command::RefPtr command ( new CheckCommand ( name, f, c, e ) );
  RadioButton::RefPtr button ( new RadioButton ( command.get() ) );
  return button.release();
}
