
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2005, Adam Kubach
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//
///////////////////////////////////////////////////////////////////////////////

#include "Cell2D.h"


///////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
///////////////////////////////////////////////////////////////////////////////

Cell2D::Cell2D( const Indices& indices, Positions* positions, Vectors* vectors ) : BaseClass(),
_indices ( indices ),
_positions ( positions ),
_vectors ( vectors ),
_t0 ( 0x0 ),
_t1 ( 0x0 )
{
  // Upper triangle.
  {
    Triangle::Indices ti ( indices[Cell2D::UPPER_LEFT], indices[Cell2D::LOWER_RIGHT], indices[Cell2D::UPPER_RIGHT] );
    _t0 = new Triangle ( ti, positions, vectors );
  }

  // Lower triangle.
  {
    Triangle::Indices ti ( indices[Cell2D::UPPER_LEFT], indices[Cell2D::LOWER_LEFT], indices[Cell2D::LOWER_RIGHT] );
    _t1 = new Triangle ( ti, positions, vectors );
  }
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destructor.
//
///////////////////////////////////////////////////////////////////////////////

Cell2D::~Cell2D()
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the upper triangle.
//
///////////////////////////////////////////////////////////////////////////////

Triangle* Cell2D::upper()
{
  return _t0.get();
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the upper triangle.
//
///////////////////////////////////////////////////////////////////////////////

const Triangle* Cell2D::upper() const
{
  return _t0.get();
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the lower triangle.
//
///////////////////////////////////////////////////////////////////////////////

Triangle* Cell2D::lower()
{
  return _t1.get();
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the lower triangle.
//
///////////////////////////////////////////////////////////////////////////////

const Triangle* Cell2D::lower() const
{
  return _t1.get();
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get indices.
//
///////////////////////////////////////////////////////////////////////////////

const Cell2D::Indices& Cell2D::indices() const
{
  return _indices;
}
