
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2008, Adam Kubach
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//
///////////////////////////////////////////////////////////////////////////////

#include "Minerva/Core/Data/Style.h"

using namespace Minerva::Core::Data;


///////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
///////////////////////////////////////////////////////////////////////////////

Style::Style() : BaseClass(),
  _iconstyle ( 0x0 ),
  _linestyle ( 0x0 ),
	_polystyle ( 0x0 )
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destructor.
//
///////////////////////////////////////////////////////////////////////////////

Style::~Style()
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Set the polystyle.
//
///////////////////////////////////////////////////////////////////////////////

void Style::polystyle ( PolyStyle * polystyle )
{
	_polystyle = polystyle;
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the polystyle.
//
///////////////////////////////////////////////////////////////////////////////

PolyStyle* Style::polystyle() const
{
	return _polystyle.get();
}


///////////////////////////////////////////////////////////////////////////////
//
//  Set the polystyle.
//
///////////////////////////////////////////////////////////////////////////////

void Style::linestyle ( LineStyle * linestyle )
{
	_linestyle = linestyle;
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the polystyle.
//
///////////////////////////////////////////////////////////////////////////////

LineStyle* Style::linestyle() const
{
	return _linestyle.get();
}


///////////////////////////////////////////////////////////////////////////////
//
//  Set the iconstyle.
//
///////////////////////////////////////////////////////////////////////////////

void Style::iconstyle ( IconStyle * style )
{
  _iconstyle = style;
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the iconstyle.
//
///////////////////////////////////////////////////////////////////////////////

IconStyle* Style::iconstyle() const
{
  return _iconstyle.get();
}
