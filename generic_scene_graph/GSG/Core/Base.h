
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2002, Perry L. Miller IV
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//
//  Optional base classes.
//
///////////////////////////////////////////////////////////////////////////////

#ifndef _GENERIC_SCENE_GRAPH_CORE_BASE_CLASSES_H_
#define _GENERIC_SCENE_GRAPH_CORE_BASE_CLASSES_H_

#include <utility>


namespace GSG {


template
<
  class First,
  class Second
>
class Pair : protected std::pair < First, Second >
{
public:

  /////////////////////////////////////////////////////////////////////////////
  //
  //  Convenient typedefs.
  //
  /////////////////////////////////////////////////////////////////////////////

  typedef typename First FirstType;
  typedef typename Second SecondType;


  /////////////////////////////////////////////////////////////////////////////
  //
  //  Constructor.
  //
  /////////////////////////////////////////////////////////////////////////////

  explicit Pair() : std::pair()
  {
    // Empty.
  }


  /////////////////////////////////////////////////////////////////////////////
  //
  //  Copy constructor.
  //
  /////////////////////////////////////////////////////////////////////////////

  Pair ( const Pair &b ) : std::pair ( b.first, b.second )
  {
    // Empty.
  }


  /////////////////////////////////////////////////////////////////////////////
  //
  //  Get the first type.
  //
  /////////////////////////////////////////////////////////////////////////////

  FirstType &getFirst()
  {
    return first;
  }

  const FirstType &getFirst() const
  {
    return first;
  }


  /////////////////////////////////////////////////////////////////////////////
  //
  //  Get the second type.
  //
  /////////////////////////////////////////////////////////////////////////////

  SecondType &getSecond()
  {
    return second;
  }

  const SecondType &getSecond() const
  {
    return second;
  }


  /////////////////////////////////////////////////////////////////////////////
  //
  //  Set the first type.
  //
  /////////////////////////////////////////////////////////////////////////////

  void setFirst ( const FirstType &f )
  {
    first = f;
  }


  /////////////////////////////////////////////////////////////////////////////
  //
  //  Set the second type.
  //
  /////////////////////////////////////////////////////////////////////////////

  void setSecond ( const SecondType &s )
  {
    second = s;
  }
};


}; // namespace GSG


#endif // _GENERIC_SCENE_GRAPH_CORE_BASE_CLASSES_H_
