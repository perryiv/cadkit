
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2002, Perry L Miller IV
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//
//  Base class for all models.
//
///////////////////////////////////////////////////////////////////////////////

#include "AppFrameWork/Core/Model.h"
#include "AppFrameWork/Core/Constants.h"

#include "Usul/Bits/Bits.h"

using namespace AFW::Core;

USUL_IMPLEMENT_TYPE_ID ( Model );


///////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
///////////////////////////////////////////////////////////////////////////////

Model::Model ( const Icon &icon ) : BaseClass(),
  _flags ( 0 ),
  _icon  ( icon )
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destructor.
//
///////////////////////////////////////////////////////////////////////////////

Model::~Model()
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Set the modified flag.
//
///////////////////////////////////////////////////////////////////////////////

void Model::modified ( bool state )
{
  Guard guard ( this->mutex() );
  const unsigned int bit ( State::MODIFIED );
  _flags = Usul::Bits::set ( _flags, bit, state );
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the modified flag.
//
///////////////////////////////////////////////////////////////////////////////

bool Model::modified() const
{
  Guard guard ( this->mutex() );
  const unsigned int bit ( State::DIRTY );
  return Usul::Bits::has ( _flags, bit );
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the icon.
//
///////////////////////////////////////////////////////////////////////////////

AFW::Core::Icon Model::icon() const
{
  Guard guard ( this->mutex() );
  return Icon ( _icon );
}


///////////////////////////////////////////////////////////////////////////////
//
//  Set the icon.
//
///////////////////////////////////////////////////////////////////////////////

void Model::icon ( const AFW::Core::Icon &icon )
{
  Guard guard ( this->mutex() );
  _icon = icon;
}
