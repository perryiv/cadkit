
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2002, Perry L. Miller IV
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//
//  The base class for visitors that operate on a render bin.
//
///////////////////////////////////////////////////////////////////////////////

#include "GSG/Core/Precompiled.h"
#include "GSG/Core/BinBuilder.h"

using namespace GSG;


///////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
///////////////////////////////////////////////////////////////////////////////

BinBuilder::BinBuilder ( RenderBin *bin ) : Visitor(),
  _bin ( bin )
{
  // Empty.
}


///////////////////////////////////////////////////////////////////////////////
//
//  Copy constructor.
//
///////////////////////////////////////////////////////////////////////////////

BinBuilder::BinBuilder ( const BinBuilder &b ) : Visitor ( b ),
  _bin ( b._bin )
{
  // Empty.
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destructor.
//
///////////////////////////////////////////////////////////////////////////////

BinBuilder::~BinBuilder()
{
  // Empty.
}


///////////////////////////////////////////////////////////////////////////////
//
//  Set the render-bin.
//
///////////////////////////////////////////////////////////////////////////////

void BinBuilder::renderBin ( RenderBin *bin )
{
  Lock lock ( this );
  _bin = bin;
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the render-bin.
//
///////////////////////////////////////////////////////////////////////////////

const RenderBin *BinBuilder::renderBin() const
{
  return _bin.get();
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the render-bin.
//
///////////////////////////////////////////////////////////////////////////////

RenderBin *BinBuilder::renderBin()
{
  return _bin.get();
}


///////////////////////////////////////////////////////////////////////////////
//
//  Reset the internal state.
//
///////////////////////////////////////////////////////////////////////////////

void BinBuilder::reset()
{
  if ( _bin.valid() )
    _bin->clear();
}
