
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2002, John K. Grant and Perry L. Miller IV.
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//
//  Base class for functors.
//
///////////////////////////////////////////////////////////////////////////////

#include "Precompiled.h"
#include "BaseFunctor.h"

#include "Usul/Base/Referenced.h"

using namespace CV;
using namespace CV::Functors;


///////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
///////////////////////////////////////////////////////////////////////////////

BaseFunctor::BaseFunctor ( Unknown *unknown, unsigned int id = 0 ) : BaseClass(),
  _iUnknown ( unknown ),
  _id ( id )
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Copy constructor.
//
///////////////////////////////////////////////////////////////////////////////

BaseFunctor::BaseFunctor ( const BaseFunctor &cb ) : BaseClass ( cb ),
  _iUnknown ( cb._iUnknown ),
  _id ( cb._id )
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destructor.
//
///////////////////////////////////////////////////////////////////////////////

BaseFunctor::~BaseFunctor()
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Return the unknown pointer.
//
///////////////////////////////////////////////////////////////////////////////

const Usul::Interfaces::IUnknown *BaseFunctor::_unknown() const
{
  return _iUnknown.get();
}


///////////////////////////////////////////////////////////////////////////////
//
//  Return the unknown pointer.
//
///////////////////////////////////////////////////////////////////////////////

Usul::Interfaces::IUnknown *BaseFunctor::_unknown()
{
  return _iUnknown.get();
}
