
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2002, Perry L. Miller IV
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//
//  Functions to find the parent.
//
///////////////////////////////////////////////////////////////////////////////

#ifndef _FOX_TOOLS_FIND_PARENT_FUNCTIONS_H_
#define _FOX_TOOLS_FIND_PARENT_FUNCTIONS_H_

namespace FX { class FXWindow; class FXMainWindow; };


namespace FoxTools {
namespace Functions {


///////////////////////////////////////////////////////////////////////////////
//
//  Find the first parent of the given type.
//
///////////////////////////////////////////////////////////////////////////////

template < class T > inline T *findParent ( FX::FXWindow *window )
{
  while ( window )
  {
    if ( window->isMemberOf ( FXMETACLASS ( T ) ) )
      return (T *) window;
    window = window->getParent();
  }
  return 0x0;
}


///////////////////////////////////////////////////////////////////////////////
//
//  Find the main window.
//
///////////////////////////////////////////////////////////////////////////////

#if 0 // Depreciated. Use FoxTools::Functions::mainWindow()
inline FX::FXMainWindow *findMainWindow ( FX::FXWindow *window )
{
  return FoxTools::Functions::findParent<FX::FXMainWindow> ( window );
}
#endif


}; // namespace Functions
}; // namespace FoxTools


#endif // _FOX_TOOLS_FIND_PARENT_FUNCTIONS_H_
