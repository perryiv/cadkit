
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2002, John K. Grant.
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//
//  Visitor that sends messages.
//
///////////////////////////////////////////////////////////////////////////////

#include "MessageVisitor.h"
#include "Menu.h"
#include "Button.h"
#include "Bits.h"

#include <stdexcept>
using namespace MenuKit;


///////////////////////////////////////////////////////////////////////////////
//
//  Default constructor.
//
///////////////////////////////////////////////////////////////////////////////

MessageVisitor::MessageVisitor ( Message m ): BaseClass ( BaseClass::ALL ),
  _message ( m )
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destructor.
//
///////////////////////////////////////////////////////////////////////////////

MessageVisitor::~MessageVisitor()
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Apply the visitor to the menu.
//
///////////////////////////////////////////////////////////////////////////////

void MessageVisitor::apply ( Menu &m )
{
  m.sendMessage ( _message );
  this->traverse ( m );
}


///////////////////////////////////////////////////////////////////////////////
//
//  Apply the visitor to the button.
//
///////////////////////////////////////////////////////////////////////////////

void MessageVisitor::apply ( Button &b )
{
  b.sendMessage ( _message );
}
