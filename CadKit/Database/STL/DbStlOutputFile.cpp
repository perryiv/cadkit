
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2002, Eric W. Schmidt
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//
//  DbStlOutputFile: Base class for STL file output.
//
///////////////////////////////////////////////////////////////////////////////

#include "DbStlPrecompiled.h"
#include "DbStlOutputFile.h"

#include "Standard/SlTypedefs.h"
#include "Standard/SlVec3IO.h"

#ifndef _CADKIT_USE_PRECOMPILED_HEADERS
# include <iostream>
# include <fstream>
#endif

using namespace CadKit;


///////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
///////////////////////////////////////////////////////////////////////////////

DbStlOutputFile::DbStlOutputFile ( const std::string &name, int nMode ) :
  _numFacets( 0 ), 
  _readyToClose( false ), 
  _fileState( DbStlOutputFile::UNCHANGED )
{ 
  SL_VERIFY ( true == this->_constructorCommon ( name, nMode ) );
}


///////////////////////////////////////////////////////////////////////////////
//
//  Code common to the constructors (left over from when there was more than 
//  one constructor.
//
///////////////////////////////////////////////////////////////////////////////

bool DbStlOutputFile::_constructorCommon ( const std::string &name, int mode )
{
  SL_ASSERT ( false == name.empty() );
  _out.open ( name.c_str(), mode );
  return ( true == _out.is_open() );
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destructor.
//
///////////////////////////////////////////////////////////////////////////////

DbStlOutputFile::~DbStlOutputFile()
{ 
  // TODO_ERIC, Should we call close() ?
}


///////////////////////////////////////////////////////////////////////////////
//
//  Close the stream.
//
///////////////////////////////////////////////////////////////////////////////

void DbStlOutputFile::close( )
{
  if ( _out.is_open() )
  {
    if ( false == this->_testMarkedForClose() )
    {
      this->_endFile();
    }

    _out.close();
  }
}
