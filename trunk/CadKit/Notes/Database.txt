Notes on the database libraries.



--------------------------------------------------------------------------------



You may want to push more functionality down into DatabaseJt, like the 

determination of per-vertex, per-polygon, per-shape, etc.



--------------------------------------------------------------------------------



It may be time to introduce the interfaces, because it would be nice to:





SlRefPtr<IVertexSetFloat> vertexSet = _jtTraverser->queryInterface ( IID_IVertexSetFloat, vertexSet );



vertexSet->setFlags ( IVertexSetFloat::APPEND_TO_CLIENT_VECTORS | 

                      IVertexSetFloat::NORMALIZE_NORMAL_VECTORS );



std::vector<SlVec3f> vertices, normals;

SL_VERIFY ( vertexSet->getVertices ( vertices ) );

SL_VERIFY ( vertexSet->getNormals ( normals ) );



IVertexSetFloat::Binding normalBinding = IVertexSetFloat::UNDEFINED;

SL_VERIFY ( vertexSet->getNormalBinding ( normalBinding ) );



std::vector<SlVec4f> colors;

SL_VERIFY ( vertexSet->getVertices ( vertices ) );



IVertexSetFloat::Binding colorBinding = IVertexSetFloat::UNDEFINED;

SL_VERIFY ( vertexSet->getColorBinding ( colorBinding ) );



std::vector<SlVec2f> textureCoords;

SL_VERIFY ( vertexSet->getTextureCoords ( textureCoords ) );

