
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2005, Perry L Miller IV
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//
//  The application class.
//
///////////////////////////////////////////////////////////////////////////////

#include "Precompiled.h"
#include "Application.h"
#include "MainWindow.h"


///////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
///////////////////////////////////////////////////////////////////////////////

Application::Application() : BaseClass(),
  _mainWindow ( 0x0 )
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destructor.
//
///////////////////////////////////////////////////////////////////////////////

Application::~Application()
{
  _mainWindow = 0x0;
}


///////////////////////////////////////////////////////////////////////////////
//
//  Called when the app is initialized.
//
///////////////////////////////////////////////////////////////////////////////

bool Application::OnInit()
{
  // Initialize all the XRC handlers. Always required.
  wxXmlResource::Get()->InitAllHandlers();

  // Declare main window, set it as the top-level window, and show it.
  _mainWindow = new MainWindow;
  this->SetTopWindow ( _mainWindow );
  _mainWindow->Show ( true );

  // Call base class's function.
  return BaseClass::OnInit();
}


///////////////////////////////////////////////////////////////////////////////
//
//  Called when the app is initialized.
//
///////////////////////////////////////////////////////////////////////////////

int Application::OnExit()
{
  return BaseClass::OnExit();
}


///////////////////////////////////////////////////////////////////////////////
//
//  Called during idle processing.
//
///////////////////////////////////////////////////////////////////////////////

bool Application::ProcessIdle()
{
  return BaseClass::ProcessIdle();
}
