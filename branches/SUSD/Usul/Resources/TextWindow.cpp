

///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2005, Perry L Miller IV
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//
//  Shared text-window resource.
//
///////////////////////////////////////////////////////////////////////////////

#include "Usul/Resources/TextWindow.h"
#include "Usul/Interfaces/GUI/IUpdateTextWindow.h"

#include <iostream>


///////////////////////////////////////////////////////////////////////////////
//
//  Pointer to the status bar.
//
///////////////////////////////////////////////////////////////////////////////

namespace Usul
{
  namespace Resources
  {
    namespace Detail
    {
      Usul::Interfaces::IUpdateTextWindow::QueryPtr _textWindowUpdate;
    }
  }
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get pointer to the text-window update interface. It may be null.
//
///////////////////////////////////////////////////////////////////////////////

Usul::Interfaces::IUpdateTextWindow *Usul::Resources::textWindowUpdate()
{
  return Detail::_textWindowUpdate.get();
}


///////////////////////////////////////////////////////////////////////////////
//
//  Set pointer to the text-window update interface.
//
///////////////////////////////////////////////////////////////////////////////

void Usul::Resources::textWindow ( Usul::Interfaces::IUnknown *unknown )
{
  Detail::_textWindowUpdate = unknown;
} 


///////////////////////////////////////////////////////////////////////////////
//
//  Convenience function for use with std::cout.
//
///////////////////////////////////////////////////////////////////////////////

std::ostream &Usul::Resources::TextWindow::flush ( std::ostream &out )
{
  out << std::flush;
  Usul::Interfaces::IUpdateTextWindow::RefPtr tw ( Usul::Resources::textWindowUpdate() );
  if ( tw.valid() )
    tw->updateTextWindow ( true );
	return out;
}


///////////////////////////////////////////////////////////////////////////////
//
//  Convenience function for use with std::cout.
//
///////////////////////////////////////////////////////////////////////////////

std::ostream &Usul::Resources::TextWindow::endl ( std::ostream &out )
{
  out << std::endl;
  Usul::Interfaces::IUpdateTextWindow::RefPtr tw ( Usul::Resources::textWindowUpdate() );
  if ( tw.valid() )
    tw->updateTextWindow ( true );
	return out;
}
