
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2006, Arizona State University
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//  Created by: Adam Kubach
//
///////////////////////////////////////////////////////////////////////////////

#include "PolygonTimeLayerGlue.h"

#include "Usul/Strings/ManagedToNative.h"
#include "Usul/Pointers/Pointers.h"

using namespace DT::Minerva::Glue;


///////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
///////////////////////////////////////////////////////////////////////////////

PolygonTimeLayerGlue::PolygonTimeLayerGlue() :
_polygonTimeLayer ( 0x0 )
{
  _polygonTimeLayer = new ::Minerva::Core::Layers::PolygonTimeLayer;
  Usul::Pointers::reference ( _polygonTimeLayer );
}


///////////////////////////////////////////////////////////////////////////////
//
//  Copy Constructor.
//
///////////////////////////////////////////////////////////////////////////////

PolygonTimeLayerGlue::PolygonTimeLayerGlue( ::Minerva::Core::Layers::PolygonTimeLayer *layer) : _polygonTimeLayer( layer )
{
  Usul::Pointers::reference ( _polygonTimeLayer );
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destructor.
//
///////////////////////////////////////////////////////////////////////////////

PolygonTimeLayerGlue::~PolygonTimeLayerGlue()
{
  if( 0x0 != _polygonTimeLayer )
  {
    _polygonTimeLayer->unref();
    _polygonTimeLayer = 0x0;
  }
}


///////////////////////////////////////////////////////////////////////////////
//
//  Finializer.
//
///////////////////////////////////////////////////////////////////////////////

PolygonTimeLayerGlue::!PolygonTimeLayerGlue()
{
  if( 0x0 != _polygonTimeLayer )
  {
    _polygonTimeLayer->unref();
    _polygonTimeLayer = 0x0;
  }
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the layer.
//
///////////////////////////////////////////////////////////////////////////////

Minerva::Core::Layers::Layer* PolygonTimeLayerGlue::layer()
{
  return _polygonTimeLayer;
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the z scale factor.
//
///////////////////////////////////////////////////////////////////////////////

float PolygonTimeLayerGlue::ZScaleFactor::get()
{
  return _polygonTimeLayer->zScaleFactor();
}


///////////////////////////////////////////////////////////////////////////////
//
//  Set the z scale factor.
//
///////////////////////////////////////////////////////////////////////////////

void PolygonTimeLayerGlue::ZScaleFactor::set( float f )
{
  _polygonTimeLayer->zScaleFactor( f );
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the x offset.
//
///////////////////////////////////////////////////////////////////////////////

float PolygonTimeLayerGlue::XOffset::get()
{
  return _polygonTimeLayer->xOffset();
}


///////////////////////////////////////////////////////////////////////////////
//
//  Set the x offset.
//
///////////////////////////////////////////////////////////////////////////////

void PolygonTimeLayerGlue::XOffset::set( float f )
{
  _polygonTimeLayer->xOffset( f );
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the y offset.
//
///////////////////////////////////////////////////////////////////////////////

float PolygonTimeLayerGlue::YOffset::get()
{
  return _polygonTimeLayer->yOffset();
}


///////////////////////////////////////////////////////////////////////////////
//
//  Set the y offset.
//
///////////////////////////////////////////////////////////////////////////////

void PolygonTimeLayerGlue::YOffset::set( float f )
{
  _polygonTimeLayer->yOffset( f );
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the step column.
//
///////////////////////////////////////////////////////////////////////////////

System::String^ PolygonTimeLayerGlue::StepColumn::get()
{
  return gcnew System::String ( _polygonTimeLayer->stepColumn().c_str() );
}


///////////////////////////////////////////////////////////////////////////////
//
//  Set the step column.
//
///////////////////////////////////////////////////////////////////////////////

void PolygonTimeLayerGlue::StepColumn::set ( System::String^ s )
{
  _polygonTimeLayer->stepColumn( Usul::Strings::convert ( s ) );
}
