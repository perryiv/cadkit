
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2007, Arizona State University
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//  Created by: Adam Kubach
//
///////////////////////////////////////////////////////////////////////////////

#include "MinervaReader.h"

#include "Serialize/XML/TypeCreator.h"
#include "Serialize/XML/Factory.h"
#include "Serialize/XML/Deserialize.h"

using namespace Minerva::Document;


///////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
///////////////////////////////////////////////////////////////////////////////

MinervaReader::MinervaReader( const std::string& filename, Unknown* caller, MinervaDocument* doc ) :
_filename ( filename ),
_caller ( caller ),
_document ( doc )
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destructor.
//
///////////////////////////////////////////////////////////////////////////////

MinervaReader::~MinervaReader()
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Read the file.
//
///////////////////////////////////////////////////////////////////////////////

void MinervaReader::operator()()
{
  Serialize::XML::Factory::instance().add ( new Serialize::XML::TypeCreator<MinervaDocument> ( "MinervaDocument" ) );
  Serialize::XML::deserialize ( _filename, *_document );
}
