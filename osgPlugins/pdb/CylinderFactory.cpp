
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2004, Adam Kubach
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//
///////////////////////////////////////////////////////////////////////////////

#include "CylinderFactory.h"

///////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
///////////////////////////////////////////////////////////////////////////////
CylinderFactory::CylinderFactory() :
_cylinders()
{
}

///////////////////////////////////////////////////////////////////////////////
//
//  Return geometry if exists, otherwise create a new one and return it
//  TODO make look up based on radius and sides?
//
///////////////////////////////////////////////////////////////////////////////
osg::Geometry* CylinderFactory::create(float r, unsigned int sides)
{
  if(sides >= _cylinders.size())
    _cylinders.resize(sides + 1);

  if(_cylinders.at(sides).valid())
    return _cylinders.at(sides)->getGeometry();

  _cylinders.at(sides) = new Cylinder(r, sides);

  return  _cylinders.at(sides)->getGeometry();
}
