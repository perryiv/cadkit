
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2002, Arizona State University
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//  Author: Perry L Miller IV
//
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//
//  Abstract class that wraps a data member.
//
///////////////////////////////////////////////////////////////////////////////

#include "Serialize/XML/MemberBase.h"

using namespace Serialize::XML;


///////////////////////////////////////////////////////////////////////////////
//
//  Constructor
//
///////////////////////////////////////////////////////////////////////////////

MemberBase::MemberBase ( const std::string &name ) : BaseClass(),
  _name ( name )
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destructor
//
///////////////////////////////////////////////////////////////////////////////

MemberBase::~MemberBase()
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Return the name.
//
///////////////////////////////////////////////////////////////////////////////

const std::string &MemberBase::name() const
{
  return _name;
}


///////////////////////////////////////////////////////////////////////////////
//
//  Default implementation does nothing.
//
///////////////////////////////////////////////////////////////////////////////

void MemberBase::serialize ( XmlTree::Node &parent ) const
{
}


///////////////////////////////////////////////////////////////////////////////
//
//  Default implementation does nothing.
//
///////////////////////////////////////////////////////////////////////////////

void MemberBase::deserialize ( const XmlTree::Node &node )
{
}
