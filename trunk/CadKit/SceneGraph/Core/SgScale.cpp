
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2002, Perry L. Miller IV
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//
///////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////
//
//  SgScale.cpp: A Scale class.
//
/////////////////////////////////////////////////////////////////////////////

#include "SgPrecompiled.h"
#include "SgScale.h"

#include "Standard/SlPrint.h"

using namespace CadKit;

SG_IMPLEMENT_DYNAMIC_NODE ( SgScale, SgTransformation );


/////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
/////////////////////////////////////////////////////////////////////////////

SgScale::SgScale() : SgTransformation(), _scale ( 1.0f, 1.0f, 1.0f )
{
  SL_PRINT2 ( "SgScale::SgScale(), this = %X\n", this );
}


/////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
/////////////////////////////////////////////////////////////////////////////

SgScale::SgScale ( const SlVec3f &s ) : SgTransformation(), _scale ( s )
{
  SL_PRINT2 ( "SgScale::SgScale(), this = %X\n", this );
}


/////////////////////////////////////////////////////////////////////////////
//
//  Copy constructor.
//
/////////////////////////////////////////////////////////////////////////////

SgScale::SgScale ( const SgScale &scale ) : SgTransformation ( scale ), _scale ( scale._scale )
{
  SL_PRINT2 ( "SgScale::SgScale(), this = %X\n", this );
}


/////////////////////////////////////////////////////////////////////////////
//
//  Destructor.
//
/////////////////////////////////////////////////////////////////////////////

SgScale::~SgScale()
{
  SL_PRINT2 ( "SgScale::~SgScale(), this = %X\n", this );
}
