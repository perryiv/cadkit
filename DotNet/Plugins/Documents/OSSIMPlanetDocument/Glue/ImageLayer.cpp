
///////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2007, Adam Kubach
//  All rights reserved.
//  BSD License: http://www.opensource.org/licenses/bsd-license.html
//
///////////////////////////////////////////////////////////////////////////////

#include "ImageLayer.h"

#include "Usul/Strings/ManagedToNative.h"

#include "ossimPlanet/ossimPlanetTextureLayerRegistry.h"

using namespace CadKit::OSSIMPlanet::Glue;


///////////////////////////////////////////////////////////////////////////////
//
//  Constructor.
//
///////////////////////////////////////////////////////////////////////////////

ImageLayer::ImageLayer(System::String ^filename)
{
  osg::ref_ptr < ossimPlanetTextureLayer > layer ( ossimPlanetTextureLayerRegistry::instance()->createLayer( Usul::Strings::convert(filename) ) );

  if( layer.valid() )
  {
    _layer = layer.get();
    _layer->ref();
  }

  this->Name = filename;
}


///////////////////////////////////////////////////////////////////////////////
//
//  Destructor.
//
///////////////////////////////////////////////////////////////////////////////

ImageLayer::~ImageLayer()
{
  if(0x0 != _layer)
  {
    _layer->unref();
    _layer = 0x0;
  }
}


///////////////////////////////////////////////////////////////////////////////
//
//  Finalizer.
//
///////////////////////////////////////////////////////////////////////////////

ImageLayer::!ImageLayer()
{
  if(0x0 != _layer)
  {
    _layer->unref();
    _layer = 0x0;
  }
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the texture layer state code.
//
///////////////////////////////////////////////////////////////////////////////

ImageLayer::TextureLayerStateCode ImageLayer::StateCode::get()
{
  if( 0x0 != _layer )
    return static_cast < TextureLayerStateCode > ( _layer->getStateCode() );
  return TextureLayerStateCode::NO_SOURCE_DATA;
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the name of the layer.
//
///////////////////////////////////////////////////////////////////////////////

System::String^ ImageLayer::Name::get()
{
  return _name;
}


///////////////////////////////////////////////////////////////////////////////
//
//  Set the name of the layer.
//
///////////////////////////////////////////////////////////////////////////////

void ImageLayer::Name::set ( System::String^ s )
{
  _name = s;
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the shown flag.
//
///////////////////////////////////////////////////////////////////////////////

bool ImageLayer::Shown::get()
{
  return _layer->getEnableFlag();
}


///////////////////////////////////////////////////////////////////////////////
//
//  Get the needs update flag.
//
///////////////////////////////////////////////////////////////////////////////

bool ImageLayer::NeedsUpdate::get()
{ 
  return false;
}


///////////////////////////////////////////////////////////////////////////////
//
//  Set the needs update flag.
//
///////////////////////////////////////////////////////////////////////////////

void ImageLayer::NeedsUpdate::set( bool b )
{
}

void ImageLayer::show()
{
}

void ImageLayer::modify()
{
}

void ImageLayer::hide()
{
}

void ImageLayer::addToFavorites()
{
}


ossimPlanetTextureLayer* ImageLayer::nativePtr()
{
  return _layer;
}

System::IntPtr ImageLayer::intPtr()
{
  return System::IntPtr ( _layer );
}
